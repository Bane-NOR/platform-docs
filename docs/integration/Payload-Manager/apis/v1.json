{
    "openapi": "3.1.0",
    "info": {
      "title": "Payload Manager Blob Storage",
      "version": "2025-01-05",
      "contact": {
        "name": "Integration Team",
        "email": "integrasjonsteamet@banenor.no"
      },
      "description": "API for the Payload Manager Blob Storage\n",
      "x-ms-code-generation-settings": {
        "header": "MIT",
        "strictSpecAdherence": false
      }
    },
    "servers": [
      {
        "url": "https://bnpaylmintnwestprod.blob.core.windows.net",
        "description": "Production instance for Bane NOR, this will have the alpha, beta and the latest released version available."
      },
      {
        "url": "https://bnpaylmintnwestdev.blob.core.windows.net",
        "description": "Internal development instance"
      },
      {
        "url": "https://bnpaylmintnwesttest.blob.core.windows.net",
        "description": "Internal test instance"
      }
    ],
    "paths": {
      "/": {
        "get": {
          "tags": [
            "service"
          ],
          "operationId": "Get_Service",
          "description": "gets the properties of a storage account's Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.",
          "summary": "Get operations on storage account (List Containers)",
          "parameters": [
            {
              "$ref": "#/components/parameters/Prefix"
            },
            {
              "$ref": "#/components/parameters/Marker"
            },
            {
              "$ref": "#/components/parameters/MaxResults"
            },
            {
              "$ref": "#/components/parameters/ListContainersInclude"
            },
            {
              "$ref": "#/components/parameters/Timeout"
            },
            {
              "$ref": "#/components/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/components/parameters/ClientRequestId"
            },
            {
              "$ref": "#/components/parameters/FilterBlobsWhere"
            }
          ],
          "responses": {
            "200": {
              "description": "Success.",
              "headers": {
                "x-ms-client-request-id": {
                  "x-ms-client-name": "ClientRequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
                },
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                },
                "x-ms-sku-name": {
                  "x-ms-client-name": "SkuName",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "Standard_LRS",
                      "Standard_GRS",
                      "Standard_RAGRS",
                      "Standard_ZRS",
                      "Premium_LRS"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "SkuName",
                    "modelAsString": false
                  },
                  "description": "Identifies the sku name of the account"
                },
                "x-ms-account-kind": {
                  "x-ms-client-name": "AccountKind",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "Storage",
                      "BlobStorage",
                      "StorageV2",
                      "FileStorage",
                      "BlockBlobStorage"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "AccountKind",
                    "modelAsString": false
                  },
                  "description": "Identifies the account kind"
                },
                "x-ms-is-hns-enabled": {
                  "x-ms-client-name": "IsHierarchicalNamespaceEnabled",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled."
                }
              },
              "content": {
                "application/xml": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/StorageServiceProperties"
                      },
                      {
                        "$ref": "#/components/schemas/ListContainersSegmentResponse"
                      },
                      {
                        "$ref": "#/components/schemas/StorageServiceStats"
                      },
                      {
                        "$ref": "#/components/schemas/FilterBlobSegment"
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/StorageError"
                  }
                }
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "NextMarker"
          }
        },
        "parameters": [
          {
            "name": "restype",
            "description": "restype",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "service",
                "account"
              ]
            }
          },
          {
            "name": "comp",
            "description": "comp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "properties",
                "stats",
                "list",
                "userdelegationkey",
                "batch",
                "blobs"
              ]
            }
          }
        ]
      },
      "/{containerName}": {
        "get": {
          "tags": [
            "container"
          ],
          "operationId": "Container_GetProperties",
          "description": "returns all user-defined metadata and system properties for the specified container. The data returned does not include the container's list of blobs",
          "summary": "Get properties for a specified container",
          "parameters": [
            {
              "$ref": "#/components/parameters/Timeout"
            },
            {
              "$ref": "#/components/parameters/LeaseIdOptional"
            },
            {
              "$ref": "#/components/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/components/parameters/ClientRequestId"
            },
            {
              "$ref": "#/components/parameters/FilterBlobsWhere"
            },
            {
              "$ref": "#/components/parameters/Marker"
            },
            {
              "$ref": "#/components/parameters/MaxResults"
            },
            {
              "$ref": "#/components/parameters/FilterBlobsInclude"
            },
            {
              "$ref": "#/components/parameters/Prefix"
            },
            {
              "$ref": "#/components/parameters/Delimiter"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "headers": {
                "Content-Type": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The media type of the body of the response. For List Blobs this is 'application/xml'"
                },
                "x-ms-meta": {
                  "schema": {
                    "type": "string"
                  },
                  "x-ms-client-name": "Metadata",
                  "x-ms-header-collection-prefix": "x-ms-meta-"
                },
                "ETag": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes."
                },
                "Last-Modified": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob."
                },
                "x-ms-lease-duration": {
                  "x-ms-client-name": "LeaseDuration",
                  "description": "When a blob is leased, specifies whether the lease is of infinite or fixed duration.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "infinite",
                      "fixed"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseDurationType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-state": {
                  "x-ms-client-name": "LeaseState",
                  "description": "Lease state of the blob.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "available",
                      "leased",
                      "expired",
                      "breaking",
                      "broken"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseStateType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-status": {
                  "x-ms-client-name": "LeaseStatus",
                  "description": "The current lease status of the blob.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "locked",
                      "unlocked"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseStatusType",
                    "modelAsString": false
                  }
                },
                "x-ms-client-request-id": {
                  "x-ms-client-name": "ClientRequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
                },
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                },
                "x-ms-blob-public-access": {
                  "x-ms-client-name": "BlobPublicAccess",
                  "description": "Indicated whether data in the container may be accessed publicly and the level of access",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "container",
                      "blob"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "PublicAccessType",
                    "modelAsString": true
                  }
                },
                "x-ms-has-immutability-policy": {
                  "x-ms-client-name": "HasImmutabilityPolicy",
                  "description": "Indicates whether the container has an immutability policy set on it.",
                  "schema": {
                    "type": "boolean"
                  }
                },
                "x-ms-has-legal-hold": {
                  "x-ms-client-name": "HasLegalHold",
                  "description": "Indicates whether the container has a legal hold.",
                  "schema": {
                    "type": "boolean"
                  }
                },
                "x-ms-default-encryption-scope": {
                  "x-ms-client-name": "DefaultEncryptionScope",
                  "description": "The default encryption scope for the container.",
                  "schema": {
                    "type": "string"
                  }
                },
                "x-ms-deny-encryption-scope-override": {
                  "x-ms-client-name": "DenyEncryptionScopeOverride",
                  "description": "Indicates whether the container's default encryption scope can be overriden.",
                  "schema": {
                    "type": "boolean"
                  }
                },
                "x-ms-immutable-storage-with-versioning-enabled": {
                  "x-ms-client-name": "IsImmutableStorageWithVersioningEnabled",
                  "description": "Indicates whether version level worm is enabled on a container.",
                  "schema": {
                    "type": "boolean"
                  }
                },
                "x-ms-sku-name": {
                  "x-ms-client-name": "SkuName",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "Standard_LRS",
                      "Standard_GRS",
                      "Standard_RAGRS",
                      "Standard_ZRS",
                      "Premium_LRS"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "SkuName",
                    "modelAsString": false
                  },
                  "description": "Identifies the sku name of the account"
                },
                "x-ms-account-kind": {
                  "x-ms-client-name": "AccountKind",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "Storage",
                      "BlobStorage",
                      "StorageV2",
                      "FileStorage",
                      "BlockBlobStorage"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "AccountKind",
                    "modelAsString": false
                  },
                  "description": "Identifies the account kind"
                },
                "x-ms-is-hns-enabled": {
                  "x-ms-client-name": "IsHierarchicalNamespaceEnabled",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "Version 2019-07-07 and newer. Indicates if the account has a hierarchical namespace enabled."
                }
              },
              "content": {
                "application/xml": {
                  "schema": {
                    "anyOf": [
                      {
                        "$ref": "#/components/schemas/SignedIdentifiers"
                      },
                      {
                        "$ref": "#/components/schemas/FilterBlobSegment"
                      },
                      {
                        "$ref": "#/components/schemas/ListBlobsFlatSegmentResponse"
                      },
                      {
                        "$ref": "#/components/schemas/ListBlobsHierarchySegmentResponse"
                      }
                    ]
                  }
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/StorageError"
                  }
                }
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "NextMarker"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ContainerName"
          },
          {
            "name": "restype",
            "description": "restype",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "container"
              ]
            }
          },
          {
            "name": "comp",
            "description": "comp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "metadata",
                "acl",
                "undelete",
                "rename",
                "batch",
                "blobs",
                "lease",
                "list",
                "properties"
              ]
            }
          },
          {
            "name": "x-ms-lease-action",
            "x-ms-client-name": "action",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "acquire",
                "release",
                "renew",
                "break",
                "change"
              ]
            },
            "x-ms-enum": {
              "name": "LeaseAction",
              "modelAsString": false
            },
            "x-ms-parameter-location": "method",
            "description": "Describes what lease action to take."
          }
        ]
      },
      "/{containerName}/{*blob}": {
        "put": {
          "tags": [
            "blob"
          ],
          "operationId": "PageBlob_Create",
          "summary": "Create/Update Blob",
          "parameters": [
            {
              "$ref": "#/components/parameters/Timeout"
            },
            {
              "$ref": "#/components/parameters/Comp"
            },
            {
              "$ref": "#/components/parameters/AccessTierOptional"
            },
            {
              "$ref": "#/components/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/components/parameters/BlobCacheControl"
            },
            {
              "$ref": "#/components/parameters/BlobConditionAppendPos"
            },
            {
              "$ref": "#/components/parameters/BlobConditionMaxSize"
            },
            {
              "$ref": "#/components/parameters/BlobContentDisposition"
            },
            {
              "$ref": "#/components/parameters/BlobContentEncoding"
            },
            {
              "$ref": "#/components/parameters/BlobContentLanguage"
            },
            {
              "$ref": "#/components/parameters/BlobContentLengthRequired"
            },
            {
              "$ref": "#/components/parameters/BlobContentMD5"
            },
            {
              "$ref": "#/components/parameters/BlobContentType"
            },
            {
              "$ref": "#/components/parameters/BlobExpiryOptions"
            },
            {
              "$ref": "#/components/parameters/BlobExpiryTime"
            },
            {
              "$ref": "#/components/parameters/BlobSequenceNumber"
            },
            {
              "$ref": "#/components/parameters/BlobTagsHeader"
            },
            {
              "$ref": "#/components/parameters/BlockId"
            },
            {
              "$ref": "#/components/parameters/ClientRequestId"
            },
            {
              "$ref": "#/components/parameters/ContentCrc64"
            },
            {
              "$ref": "#/components/parameters/ContentLength"
            },
            {
              "$ref": "#/components/parameters/ContentMD5"
            },
            {
              "$ref": "#/components/parameters/CopyId"
            },
            {
              "$ref": "#/components/parameters/CopySource"
            },
            {
              "$ref": "#/components/parameters/CopySourceAuthorization"
            },
            {
              "$ref": "#/components/parameters/CopySourceBlobProperties"
            },
            {
              "$ref": "#/components/parameters/CopySourceTags"
            },
            {
              "$ref": "#/components/parameters/EncryptionAlgorithm"
            },
            {
              "$ref": "#/components/parameters/EncryptionKey"
            },
            {
              "$ref": "#/components/parameters/EncryptionKeySha256"
            },
            {
              "$ref": "#/components/parameters/EncryptionScope"
            },
            {
              "$ref": "#/components/parameters/IfMatch"
            },
            {
              "$ref": "#/components/parameters/IfModifiedSince"
            },
            {
              "$ref": "#/components/parameters/IfNoneMatch"
            },
            {
              "$ref": "#/components/parameters/IfSequenceNumberEqualTo"
            },
            {
              "$ref": "#/components/parameters/IfSequenceNumberLessThan"
            },
            {
              "$ref": "#/components/parameters/IfSequenceNumberLessThanOrEqualTo"
            },
            {
              "$ref": "#/components/parameters/IfTags"
            },
            {
              "$ref": "#/components/parameters/IfUnmodifiedSince"
            },
            {
              "$ref": "#/components/parameters/ImmutabilityPolicyExpiry"
            },
            {
              "$ref": "#/components/parameters/ImmutabilityPolicyMode"
            },
            {
              "$ref": "#/components/parameters/LeaseBreakPeriod"
            },
            {
              "$ref": "#/components/parameters/LeaseDuration"
            },
            {
              "$ref": "#/components/parameters/LeaseIdOptional"
            },
            {
              "$ref": "#/components/parameters/LegalHoldOptional"
            },
            {
              "$ref": "#/components/parameters/Metadata"
            },
            {
              "$ref": "#/components/parameters/ProposedLeaseIdOptional"
            },
            {
              "$ref": "#/components/parameters/Range"
            },
            {
              "$ref": "#/components/parameters/RehydratePriority"
            },
            {
              "$ref": "#/components/parameters/SealBlob"
            },
            {
              "$ref": "#/components/parameters/SequenceNumberAction"
            },
            {
              "$ref": "#/components/parameters/Snapshot"
            },
            {
              "$ref": "#/components/parameters/SourceContentCRC64"
            },
            {
              "$ref": "#/components/parameters/SourceContentMD5"
            },
            {
              "$ref": "#/components/parameters/SourceIfMatch"
            },
            {
              "$ref": "#/components/parameters/SourceIfModifiedSince"
            },
            {
              "$ref": "#/components/parameters/SourceIfNoneMatch"
            },
            {
              "$ref": "#/components/parameters/SourceIfTags"
            },
            {
              "$ref": "#/components/parameters/SourceIfUnmodifiedSince"
            },
            {
              "$ref": "#/components/parameters/SourceRange"
            },
            {
              "$ref": "#/components/parameters/StructuredBodyPut"
            },
            {
              "$ref": "#/components/parameters/StructuredContentLength"
            },
            {
              "$ref": "#/components/parameters/VersionId"
            }
          ],
          "responses": {
            "201": {
              "description": "The blob was created.",
              "headers": {
                "ETag": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes."
                },
                "Last-Modified": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob."
                },
                "Content-MD5": {
                  "schema": {
                    "type": "string",
                    "format": "byte"
                  },
                  "description": "If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity."
                },
                "x-ms-client-request-id": {
                  "x-ms-client-name": "ClientRequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
                },
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "x-ms-version-id": {
                  "x-ms-client-name": "VersionId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob."
                },
                "Date": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                },
                "x-ms-request-server-encrypted": {
                  "x-ms-client-name": "IsServerEncrypted",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "The value of this header is set to true if the contents of the request are successfully encrypted using the specified algorithm, and false otherwise."
                },
                "x-ms-encryption-key-sha256": {
                  "x-ms-client-name": "EncryptionKeySha256",
                  "schema": {
                    "type": "string"
                  },
                  "description": "The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key."
                },
                "x-ms-encryption-scope": {
                  "x-ms-client-name": "EncryptionScope",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope."
                },
                "x-ms-structured-body": {
                  "x-ms-client-name": "StructuredBodyType",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the structured message body was accepted and mirrors back the message schema version and properties."
                }
              },
              "content": {
                "application/xml": {
                  "schema": {
                    "type": "object",
                    "format": "file"
                  }
                },
                "application/octet-stream": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/StorageError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "blob"
          ],
          "operationId": "Blob_Download",
          "summary": "Download blob",
          "parameters": [
            {
              "$ref": "#/components/parameters/Snapshot"
            },
            {
              "$ref": "#/components/parameters/VersionId"
            },
            {
              "$ref": "#/components/parameters/Timeout"
            },
            {
              "$ref": "#/components/parameters/Range"
            },
            {
              "$ref": "#/components/parameters/LeaseIdOptional"
            },
            {
              "$ref": "#/components/parameters/GetRangeContentMD5"
            },
            {
              "$ref": "#/components/parameters/GetRangeContentCRC64"
            },
            {
              "$ref": "#/components/parameters/StructuredBodyGet"
            },
            {
              "$ref": "#/components/parameters/EncryptionKey"
            },
            {
              "$ref": "#/components/parameters/EncryptionKeySha256"
            },
            {
              "$ref": "#/components/parameters/EncryptionAlgorithm"
            },
            {
              "$ref": "#/components/parameters/IfModifiedSince"
            },
            {
              "$ref": "#/components/parameters/IfUnmodifiedSince"
            },
            {
              "$ref": "#/components/parameters/IfMatch"
            },
            {
              "$ref": "#/components/parameters/IfNoneMatch"
            },
            {
              "$ref": "#/components/parameters/IfTags"
            },
            {
              "$ref": "#/components/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/components/parameters/ClientRequestId"
            },
            {
              "$ref": "#/components/parameters/Marker"
            },
            {
              "$ref": "#/components/parameters/MaxResults"
            },
            {
              "$ref": "#/components/parameters/PrevSnapshot"
            },
            {
              "$ref": "#/components/parameters/PrevSnapshotUrl"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the content of the entire blob.",
              "headers": {
                "Last-Modified": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob."
                },
                "x-ms-creation-time": {
                  "x-ms-client-name": "CreationTime",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Returns the date and time the blob was created."
                },
                "x-ms-meta": {
                  "schema": {
                    "type": "string"
                  },
                  "x-ms-client-name": "Metadata",
                  "x-ms-header-collection-prefix": "x-ms-meta-"
                },
                "x-ms-or-policy-id": {
                  "x-ms-client-name": "ObjectReplicationPolicyId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Optional. Only valid when Object Replication is enabled for the storage container and on the destination blob of the replication."
                },
                "x-ms-or": {
                  "schema": {
                    "type": "string"
                  },
                  "x-ms-client-name": "ObjectReplicationRules",
                  "x-ms-header-collection-prefix": "x-ms-or-",
                  "description": "Optional. Only valid when Object Replication is enabled for the storage container and on the source blob of the replication. When retrieving this header, it will return the header with the policy id and rule id (e.g. x-ms-or-policyid_ruleid), and the value will be the status of the replication (e.g. complete, failed)."
                },
                "Content-Length": {
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The number of bytes present in the response body."
                },
                "Content-Type": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The media type of the body of the response. For Download Blob this is 'application/octet-stream'"
                },
                "Content-Range": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header."
                },
                "ETag": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes."
                },
                "Content-MD5": {
                  "schema": {
                    "type": "string",
                    "format": "byte"
                  },
                  "description": "If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity."
                },
                "Content-Encoding": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header returns the value that was specified for the Content-Encoding request header"
                },
                "Cache-Control": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header is returned if it was previously specified for the blob."
                },
                "Content-Disposition": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified."
                },
                "Content-Language": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header returns the value that was specified for the Content-Language request header."
                },
                "x-ms-blob-sequence-number": {
                  "x-ms-client-name": "BlobSequenceNumber",
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The current sequence number for a page blob. This header is not returned for block blobs or append blobs"
                },
                "x-ms-blob-type": {
                  "x-ms-client-name": "BlobType",
                  "description": "The blob's type.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "BlockBlob",
                      "PageBlob",
                      "AppendBlob"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "BlobType",
                    "modelAsString": false
                  }
                },
                "x-ms-copy-completion-time": {
                  "x-ms-client-name": "CopyCompletionTime",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
                },
                "x-ms-copy-status-description": {
                  "x-ms-client-name": "CopyStatusDescription",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List"
                },
                "x-ms-copy-id": {
                  "x-ms-client-name": "CopyId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy."
                },
                "x-ms-copy-progress": {
                  "x-ms-client-name": "CopyProgress",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List"
                },
                "x-ms-copy-source": {
                  "x-ms-client-name": "CopySource",
                  "schema": {
                    "type": "string"
                  },
                  "description": "URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
                },
                "x-ms-copy-status": {
                  "x-ms-client-name": "CopyStatus",
                  "description": "State of the copy operation identified by x-ms-copy-id.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "success",
                      "aborted",
                      "failed"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "CopyStatusType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-duration": {
                  "x-ms-client-name": "LeaseDuration",
                  "description": "When a blob is leased, specifies whether the lease is of infinite or fixed duration.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "infinite",
                      "fixed"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseDurationType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-state": {
                  "x-ms-client-name": "LeaseState",
                  "description": "Lease state of the blob.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "available",
                      "leased",
                      "expired",
                      "breaking",
                      "broken"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseStateType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-status": {
                  "x-ms-client-name": "LeaseStatus",
                  "description": "The current lease status of the blob.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "locked",
                      "unlocked"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseStatusType",
                    "modelAsString": false
                  }
                },
                "x-ms-client-request-id": {
                  "x-ms-client-name": "ClientRequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
                },
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "x-ms-version-id": {
                  "x-ms-client-name": "VersionId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob."
                },
                "x-ms-is-current-version": {
                  "x-ms-client-name": "IsCurrentVersion",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "The value of this header indicates whether version of this blob is a current version, see also x-ms-version-id header."
                },
                "Accept-Ranges": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates that the service supports requests for partial blob content."
                },
                "Date": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                },
                "x-ms-blob-committed-block-count": {
                  "x-ms-client-name": "BlobCommittedBlockCount",
                  "schema": {
                    "type": "integer"
                  },
                  "description": "The number of committed blocks present in the blob. This header is returned only for append blobs."
                },
                "x-ms-server-encrypted": {
                  "x-ms-client-name": "IsServerEncrypted",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "The value of this header is set to true if the blob data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the blob is unencrypted, or if only parts of the blob/application metadata are encrypted)."
                },
                "x-ms-encryption-key-sha256": {
                  "x-ms-client-name": "EncryptionKeySha256",
                  "schema": {
                    "type": "string"
                  },
                  "description": "The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key."
                },
                "x-ms-encryption-scope": {
                  "x-ms-client-name": "EncryptionScope",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope."
                },
                "x-ms-blob-content-md5": {
                  "x-ms-client-name": "BlobContentMD5",
                  "schema": {
                    "type": "string",
                    "format": "byte"
                  },
                  "description": "If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range"
                },
                "x-ms-tag-count": {
                  "x-ms-client-name": "TagCount",
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The number of tags associated with the blob"
                },
                "x-ms-blob-sealed": {
                  "x-ms-client-name": "IsSealed",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "If this blob has been sealed"
                },
                "x-ms-last-access-time": {
                  "x-ms-client-name": "LastAccessed",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the blob was last read or written to"
                },
                "x-ms-immutability-policy-until-date": {
                  "x-ms-client-name": "ImmutabilityPolicyExpiresOn",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire."
                },
                "x-ms-immutability-policy-mode": {
                  "x-ms-client-name": "ImmutabilityPolicyMode",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "Mutable",
                      "Unlocked",
                      "Locked"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "BlobImmutabilityPolicyMode",
                    "modelAsString": false
                  },
                  "description": "Indicates immutability policy mode."
                },
                "x-ms-legal-hold": {
                  "x-ms-client-name": "LegalHold",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "Indicates if a legal hold is present on the blob."
                },
                "x-ms-structured-body": {
                  "x-ms-client-name": "StructuredBodyType",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the response body contains a structured message and specifies the message schema version and properties."
                },
                "x-ms-structured-content-length": {
                  "x-ms-client-name": "StructuredContentLength",
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The length of the blob/file content inside the message body when the response body is returned as a structured message. Will always be smaller than Content-Length."
                }
              },
              "content": {
                "application/xml": {
                  "schema": {
                    "type": "object",
                    "format": "file"
                  }
                }
              }
            },
            "206": {
              "description": "Returns the content of a specified range of the blob.",
              "headers": {
                "Last-Modified": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Returns the date and time the container was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob."
                },
                "x-ms-creation-time": {
                  "x-ms-client-name": "CreationTime",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Returns the date and time the blob was created."
                },
                "x-ms-meta": {
                  "schema": {
                    "type": "string"
                  },
                  "x-ms-client-name": "Metadata",
                  "x-ms-header-collection-prefix": "x-ms-meta-"
                },
                "x-ms-or-policy-id": {
                  "x-ms-client-name": "ObjectReplicationPolicyId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Optional. Only valid when Object Replication is enabled for the storage container and on the destination blob of the replication."
                },
                "x-ms-or": {
                  "schema": {
                    "type": "string"
                  },
                  "x-ms-client-name": "ObjectReplicationRules",
                  "x-ms-header-collection-prefix": "x-ms-or-",
                  "description": "Optional. Only valid when Object Replication is enabled for the storage container and on the source blob of the replication. When retrieving this header, it will return the header with the policy id and rule id (e.g. x-ms-or-policyid_ruleid), and the value will be the status of the replication (e.g. complete, failed)."
                },
                "Content-Length": {
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The number of bytes present in the response body."
                },
                "Content-Type": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The media type of the body of the response. For Download Blob this is 'application/octet-stream'"
                },
                "Content-Range": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the range of bytes returned in the event that the client requested a subset of the blob by setting the 'Range' request header."
                },
                "ETag": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes."
                },
                "Content-MD5": {
                  "schema": {
                    "type": "string",
                    "format": "byte"
                  },
                  "description": "If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity."
                },
                "Content-Encoding": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header returns the value that was specified for the Content-Encoding request header"
                },
                "Cache-Control": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header is returned if it was previously specified for the blob."
                },
                "Content-Disposition": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified."
                },
                "Content-Language": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header returns the value that was specified for the Content-Language request header."
                },
                "x-ms-blob-sequence-number": {
                  "x-ms-client-name": "BlobSequenceNumber",
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The current sequence number for a page blob. This header is not returned for block blobs or append blobs"
                },
                "x-ms-blob-type": {
                  "x-ms-client-name": "BlobType",
                  "description": "The blob's type.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "BlockBlob",
                      "PageBlob",
                      "AppendBlob"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "BlobType",
                    "modelAsString": false
                  }
                },
                "x-ms-content-crc64": {
                  "x-ms-client-name": "ContentCrc64",
                  "schema": {
                    "type": "string",
                    "format": "byte"
                  },
                  "description": "If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to true, then the request returns a crc64 for the range, as long as the range size is less than or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is specified in the same request, it will fail with 400(Bad Request)"
                },
                "x-ms-copy-completion-time": {
                  "x-ms-client-name": "CopyCompletionTime",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
                },
                "x-ms-copy-status-description": {
                  "x-ms-client-name": "CopyStatusDescription",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List"
                },
                "x-ms-copy-id": {
                  "x-ms-client-name": "CopyId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy."
                },
                "x-ms-copy-progress": {
                  "x-ms-client-name": "CopyProgress",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List"
                },
                "x-ms-copy-source": {
                  "x-ms-client-name": "CopySource",
                  "schema": {
                    "type": "string"
                  },
                  "description": "URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
                },
                "x-ms-copy-status": {
                  "x-ms-client-name": "CopyStatus",
                  "description": "State of the copy operation identified by x-ms-copy-id.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "success",
                      "aborted",
                      "failed"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "CopyStatusType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-duration": {
                  "x-ms-client-name": "LeaseDuration",
                  "description": "When a blob is leased, specifies whether the lease is of infinite or fixed duration.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "infinite",
                      "fixed"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseDurationType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-state": {
                  "x-ms-client-name": "LeaseState",
                  "description": "Lease state of the blob.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "available",
                      "leased",
                      "expired",
                      "breaking",
                      "broken"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseStateType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-status": {
                  "x-ms-client-name": "LeaseStatus",
                  "description": "The current lease status of the blob.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "locked",
                      "unlocked"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseStatusType",
                    "modelAsString": false
                  }
                },
                "x-ms-client-request-id": {
                  "x-ms-client-name": "ClientRequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
                },
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "x-ms-version-id": {
                  "x-ms-client-name": "VersionId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob."
                },
                "x-ms-is-current-version": {
                  "x-ms-client-name": "IsCurrentVersion",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "The value of this header indicates whether version of this blob is a current version, see also x-ms-version-id header."
                },
                "Accept-Ranges": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates that the service supports requests for partial blob content."
                },
                "Date": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                },
                "x-ms-blob-committed-block-count": {
                  "x-ms-client-name": "BlobCommittedBlockCount",
                  "schema": {
                    "type": "integer"
                  },
                  "description": "The number of committed blocks present in the blob. This header is returned only for append blobs."
                },
                "x-ms-server-encrypted": {
                  "x-ms-client-name": "IsServerEncrypted",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "The value of this header is set to true if the blob data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the blob is unencrypted, or if only parts of the blob/application metadata are encrypted)."
                },
                "x-ms-encryption-key-sha256": {
                  "x-ms-client-name": "EncryptionKeySha256",
                  "schema": {
                    "type": "string"
                  },
                  "description": "The SHA-256 hash of the encryption key used to encrypt the blob. This header is only returned when the blob was encrypted with a customer-provided key."
                },
                "x-ms-encryption-scope": {
                  "x-ms-client-name": "EncryptionScope",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope."
                },
                "x-ms-blob-content-md5": {
                  "x-ms-client-name": "BlobContentMD5",
                  "schema": {
                    "type": "string",
                    "format": "byte"
                  },
                  "description": "If the blob has a MD5 hash, and if request contains range header (Range or x-ms-range), this response header is returned with the value of the whole blob's MD5 value. This value may or may not be equal to the value returned in Content-MD5 header, with the latter calculated from the requested range"
                },
                "x-ms-tag-count": {
                  "x-ms-client-name": "TagCount",
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The number of tags associated with the blob"
                },
                "x-ms-blob-sealed": {
                  "x-ms-client-name": "IsSealed",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "If this blob has been sealed"
                },
                "x-ms-last-access-time": {
                  "x-ms-client-name": "LastAccessed",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the blob was last read or written to"
                },
                "x-ms-immutability-policy-until-date": {
                  "x-ms-client-name": "ImmutabilityPolicyExpiresOn",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire."
                },
                "x-ms-immutability-policy-mode": {
                  "x-ms-client-name": "ImmutabilityPolicyMode",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates immutability policy mode."
                },
                "x-ms-legal-hold": {
                  "x-ms-client-name": "LegalHold",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "Indicates if a legal hold is present on the blob."
                },
                "x-ms-structured-body": {
                  "x-ms-client-name": "StructuredBodyType",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the response body contains a structured message and specifies the message schema version and properties."
                },
                "x-ms-structured-content-length": {
                  "x-ms-client-name": "StructuredContentLength",
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The length of the blob/file content inside the message body when the response body is returned as a structured message. Will always be smaller than Content-Length."
                }
              },
              "content": {
                "application/xml": {
                  "schema": {
                    "type": "object",
                    "format": "file"
                  }
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/StorageError"
                  }
                }
              }
            }
          }
        },
        "head": {
          "tags": [
            "blob"
          ],
          "operationId": "Blob_GetProperties",
          "summary": "Get blob properties",
          "parameters": [
            {
              "$ref": "#/components/parameters/Snapshot"
            },
            {
              "$ref": "#/components/parameters/VersionId"
            },
            {
              "$ref": "#/components/parameters/Timeout"
            },
            {
              "$ref": "#/components/parameters/LeaseIdOptional"
            },
            {
              "$ref": "#/components/parameters/EncryptionKey"
            },
            {
              "$ref": "#/components/parameters/EncryptionKeySha256"
            },
            {
              "$ref": "#/components/parameters/EncryptionAlgorithm"
            },
            {
              "$ref": "#/components/parameters/IfModifiedSince"
            },
            {
              "$ref": "#/components/parameters/IfUnmodifiedSince"
            },
            {
              "$ref": "#/components/parameters/IfMatch"
            },
            {
              "$ref": "#/components/parameters/IfNoneMatch"
            },
            {
              "$ref": "#/components/parameters/IfTags"
            },
            {
              "$ref": "#/components/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/components/parameters/ClientRequestId"
            }
          ],
          "responses": {
            "200": {
              "description": "Returns the properties of the blob.",
              "headers": {
                "Last-Modified": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Returns the date and time the blob was last modified. Any operation that modifies the blob, including an update of the blob's metadata or properties, changes the last-modified time of the blob."
                },
                "x-ms-creation-time": {
                  "x-ms-client-name": "CreationTime",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Returns the date and time the blob was created."
                },
                "x-ms-meta": {
                  "schema": {
                    "type": "string"
                  },
                  "x-ms-client-name": "Metadata",
                  "x-ms-header-collection-prefix": "x-ms-meta-"
                },
                "x-ms-or-policy-id": {
                  "x-ms-client-name": "ObjectReplicationPolicyId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Optional. Only valid when Object Replication is enabled for the storage container and on the destination blob of the replication."
                },
                "x-ms-or": {
                  "schema": {
                    "type": "string"
                  },
                  "x-ms-client-name": "ObjectReplicationRules",
                  "x-ms-header-collection-prefix": "x-ms-or-",
                  "description": "Optional. Only valid when Object Replication is enabled for the storage container and on the source blob of the replication. When retrieving this header, it will return the header with the policy id and rule id (e.g. x-ms-or-policyid_ruleid), and the value will be the status of the replication (e.g. complete, failed)."
                },
                "x-ms-blob-type": {
                  "x-ms-client-name": "BlobType",
                  "description": "The blob's type.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "BlockBlob",
                      "PageBlob",
                      "AppendBlob"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "BlobType",
                    "modelAsString": false
                  }
                },
                "x-ms-copy-completion-time": {
                  "x-ms-client-name": "CopyCompletionTime",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "Conclusion time of the last attempted Copy Blob operation where this blob was the destination blob. This value can specify the time of a completed, aborted, or failed copy attempt. This header does not appear if a copy is pending, if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
                },
                "x-ms-copy-status-description": {
                  "x-ms-client-name": "CopyStatusDescription",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Only appears when x-ms-copy-status is failed or pending. Describes the cause of the last fatal or non-fatal copy operation failure. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List"
                },
                "x-ms-copy-id": {
                  "x-ms-client-name": "CopyId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "String identifier for this copy operation. Use with Get Blob Properties to check the status of this copy operation, or pass to Abort Copy Blob to abort a pending copy."
                },
                "x-ms-copy-progress": {
                  "x-ms-client-name": "CopyProgress",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Contains the number of bytes copied and the total bytes in the source in the last attempted Copy Blob operation where this blob was the destination blob. Can show between 0 and Content-Length bytes copied. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List"
                },
                "x-ms-copy-source": {
                  "x-ms-client-name": "CopySource",
                  "schema": {
                    "type": "string"
                  },
                  "description": "URL up to 2 KB in length that specifies the source blob or file used in the last attempted Copy Blob operation where this blob was the destination blob. This header does not appear if this blob has never been the destination in a Copy Blob operation, or if this blob has been modified after a concluded Copy Blob operation using Set Blob Properties, Put Blob, or Put Block List."
                },
                "x-ms-copy-status": {
                  "x-ms-client-name": "CopyStatus",
                  "description": "State of the copy operation identified by x-ms-copy-id.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "success",
                      "aborted",
                      "failed"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "CopyStatusType",
                    "modelAsString": false
                  }
                },
                "x-ms-incremental-copy": {
                  "x-ms-client-name": "IsIncrementalCopy",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "Included if the blob is incremental copy blob."
                },
                "x-ms-copy-destination-snapshot": {
                  "x-ms-client-name": "DestinationSnapshot",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Included if the blob is incremental copy blob or incremental copy snapshot, if x-ms-copy-status is success. Snapshot time of the last successful incremental copy snapshot for this blob."
                },
                "x-ms-lease-duration": {
                  "x-ms-client-name": "LeaseDuration",
                  "description": "When a blob is leased, specifies whether the lease is of infinite or fixed duration.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "infinite",
                      "fixed"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseDurationType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-state": {
                  "x-ms-client-name": "LeaseState",
                  "description": "Lease state of the blob.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "available",
                      "leased",
                      "expired",
                      "breaking",
                      "broken"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseStateType",
                    "modelAsString": false
                  }
                },
                "x-ms-lease-status": {
                  "x-ms-client-name": "LeaseStatus",
                  "description": "The current lease status of the blob.",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "locked",
                      "unlocked"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "LeaseStatusType",
                    "modelAsString": false
                  }
                },
                "Content-Length": {
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The number of bytes present in the response body."
                },
                "Content-Type": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The content type specified for the blob. The default content type is 'application/octet-stream'"
                },
                "ETag": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "The ETag contains a value that you can use to perform operations conditionally. If the request version is 2011-08-18 or newer, the ETag value will be in quotes."
                },
                "Content-MD5": {
                  "schema": {
                    "type": "string",
                    "format": "byte"
                  },
                  "description": "If the blob has an MD5 hash and this operation is to read the full blob, this response header is returned so that the client can check for message content integrity."
                },
                "Content-Encoding": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header returns the value that was specified for the Content-Encoding request header"
                },
                "Content-Disposition": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header returns the value that was specified for the 'x-ms-blob-content-disposition' header. The Content-Disposition response header field conveys additional information about how to process the response payload, and also can be used to attach additional metadata. For example, if set to attachment, it indicates that the user-agent should not display the response, but instead show a Save As dialog with a filename other than the blob name specified."
                },
                "Content-Language": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header returns the value that was specified for the Content-Language request header."
                },
                "Cache-Control": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header is returned if it was previously specified for the blob."
                },
                "x-ms-blob-sequence-number": {
                  "x-ms-client-name": "BlobSequenceNumber",
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The current sequence number for a page blob. This header is not returned for block blobs or append blobs"
                },
                "x-ms-client-request-id": {
                  "x-ms-client-name": "ClientRequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "If a client request id header is sent in the request, this header will be present in the response with the same value."
                },
                "x-ms-request-id": {
                  "x-ms-client-name": "RequestId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "This header uniquely identifies the request that was made and can be used for troubleshooting the request."
                },
                "x-ms-version": {
                  "x-ms-client-name": "Version",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates the version of the Blob service used to execute the request. This header is returned for requests made against version 2009-09-19 and above."
                },
                "Date": {
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the response was initiated"
                },
                "Accept-Ranges": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "Indicates that the service supports requests for partial blob content."
                },
                "x-ms-blob-committed-block-count": {
                  "x-ms-client-name": "BlobCommittedBlockCount",
                  "schema": {
                    "type": "integer"
                  },
                  "description": "The number of committed blocks present in the blob. This header is returned only for append blobs."
                },
                "x-ms-server-encrypted": {
                  "x-ms-client-name": "IsServerEncrypted",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "The value of this header is set to true if the blob data and application metadata are completely encrypted using the specified algorithm. Otherwise, the value is set to false (when the blob is unencrypted, or if only parts of the blob/application metadata are encrypted)."
                },
                "x-ms-encryption-key-sha256": {
                  "x-ms-client-name": "EncryptionKeySha256",
                  "schema": {
                    "type": "string"
                  },
                  "description": "The SHA-256 hash of the encryption key used to encrypt the metadata. This header is only returned when the metadata was encrypted with a customer-provided key."
                },
                "x-ms-encryption-scope": {
                  "x-ms-client-name": "EncryptionScope",
                  "schema": {
                    "type": "string"
                  },
                  "description": "Returns the name of the encryption scope used to encrypt the blob contents and application metadata.  Note that the absence of this header implies use of the default account encryption scope."
                },
                "x-ms-access-tier": {
                  "x-ms-client-name": "AccessTier",
                  "schema": {
                    "type": "string"
                  },
                  "description": "The tier of page blob on a premium storage account or tier of block blob on blob storage LRS accounts. For a list of allowed premium page blob tiers, see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/premium-storage#features. For blob storage LRS accounts, valid values are Hot/Cool/Archive."
                },
                "x-ms-access-tier-inferred": {
                  "x-ms-client-name": "AccessTierInferred",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "For page blobs on a premium storage account only. If the access tier is not explicitly set on the blob, the tier is inferred based on its content length and this header will be returned with true value."
                },
                "x-ms-archive-status": {
                  "x-ms-client-name": "ArchiveStatus",
                  "schema": {
                    "type": "string"
                  },
                  "description": "For blob storage LRS accounts, valid values are rehydrate-pending-to-hot/rehydrate-pending-to-cool. If the blob is being rehydrated and is not complete then this header is returned indicating that rehydrate is pending and also tells the destination tier."
                },
                "x-ms-access-tier-change-time": {
                  "x-ms-client-name": "AccessTierChangeTime",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "The time the tier was changed on the object. This is only returned if the tier on the block blob was ever set."
                },
                "x-ms-version-id": {
                  "x-ms-client-name": "VersionId",
                  "schema": {
                    "type": "string"
                  },
                  "description": "A DateTime value returned by the service that uniquely identifies the blob. The value of this header indicates the blob version, and may be used in subsequent requests to access this version of the blob."
                },
                "x-ms-is-current-version": {
                  "x-ms-client-name": "IsCurrentVersion",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "The value of this header indicates whether version of this blob is a current version, see also x-ms-version-id header."
                },
                "x-ms-tag-count": {
                  "x-ms-client-name": "TagCount",
                  "schema": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "description": "The number of tags associated with the blob"
                },
                "x-ms-expiry-time": {
                  "x-ms-client-name": "ExpiresOn",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "The time this blob will expire."
                },
                "x-ms-blob-sealed": {
                  "x-ms-client-name": "IsSealed",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "If this blob has been sealed"
                },
                "x-ms-rehydrate-priority": {
                  "x-ms-client-name": "RehydratePriority",
                  "description": "If an object is in rehydrate pending state then this header is returned with priority of rehydrate. Valid values are High and Standard.",
                  "schema": {
                    "type": "string"
                  }
                },
                "x-ms-last-access-time": {
                  "x-ms-client-name": "LastAccessed",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the blob was last read or written to"
                },
                "x-ms-immutability-policy-until-date": {
                  "x-ms-client-name": "ImmutabilityPolicyExpiresOn",
                  "schema": {
                    "type": "string",
                    "format": "date-time-rfc1123"
                  },
                  "description": "UTC date/time value generated by the service that indicates the time at which the blob immutability policy will expire."
                },
                "x-ms-immutability-policy-mode": {
                  "x-ms-client-name": "ImmutabilityPolicyMode",
                  "schema": {
                    "type": "string",
                    "enum": [
                      "Mutable",
                      "Unlocked",
                      "Locked"
                    ]
                  },
                  "x-ms-enum": {
                    "name": "BlobImmutabilityPolicyMode",
                    "modelAsString": false
                  },
                  "description": "Indicates immutability policy mode."
                },
                "x-ms-legal-hold": {
                  "x-ms-client-name": "LegalHold",
                  "schema": {
                    "type": "boolean"
                  },
                  "description": "Indicates if a legal hold is present on the blob."
                }
              }
            },
            "default": {
              "description": "Failure",
              "headers": {
                "x-ms-error-code": {
                  "x-ms-client-name": "ErrorCode",
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/StorageError"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/ContainerName"
          },
          {
            "$ref": "#/components/parameters/Blob"
          },
          {
            "name": "x-ms-blob-type",
            "x-ms-client-name": "blobType",
            "in": "header",
            "required": true,
            "x-ms-parameter-location": "method",
            "description": "Specifies the type of blob to create: block blob, page blob, or append blob.",
            "schema": {
              "type": "string",
              "enum": [
                "PageBlob",
                "AppendBlob",
                "BlockBlob"
              ]
            },
            "x-ms-enum": {
              "name": "BlobType",
              "modelAsString": false
            }
          }
        ]
      }
    },
    "components": {
      "parameters": {
        "Prefix": {
          "name": "prefix",
          "in": "query",
          "description": "Filters the results to return only containers whose name begins with the specified prefix.",
          "schema": {
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "Marker": {
          "name": "marker",
          "in": "query",
          "description": "A string value that identifies the portion of the list of containers to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all containers remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.",
          "schema": {
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "MaxResults": {
          "name": "maxresults",
          "in": "query",
          "description": "Specifies the maximum number of containers to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000.",
          "schema": {
            "minimum": 1,
            "type": "integer",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "ListContainersInclude": {
          "name": "include",
          "in": "query",
          "description": "Include this parameter to specify that the container's metadata be returned as part of the response body.",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "metadata",
                "deleted",
                "system"
              ],
              "x-ms-enum": {
                "name": "ListContainersIncludeType",
                "modelAsString": false
              }
            },
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "Timeout": {
          "name": "timeout",
          "in": "query",
          "description": "The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting Timeouts for Blob Service Operations.</a>",
          "schema": {
            "minimum": 0,
            "type": "integer",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "ApiVersionParameter": {
          "name": "x-ms-version",
          "in": "header",
          "description": "Specifies the version of the operation to use for this request.",
          "required": true,
          "schema": {
            "type": "string",
            "enum": [
              "2025-01-05"
            ],
            "x-ms-parameter-location": "client",
            "x-ms-client-name": "version"
          },
          "x-ms-parameter-location": "client",
          "x-ms-client-name": "version"
        },
        "ClientRequestId": {
          "name": "x-ms-client-request-id",
          "in": "header",
          "description": "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "requestId",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "requestId",
          "x-ms-parameter-location": "method"
        },
        "FilterBlobsWhere": {
          "name": "where",
          "in": "query",
          "description": "Filters the results to return only to return only blobs whose tags match the specified expression.",
          "schema": {
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "ContainerName": {
          "name": "containerName",
          "in": "path",
          "description": "The container name.",
          "required": true,
          "schema": {
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "LeaseIdOptional": {
          "name": "x-ms-lease-id",
          "in": "header",
          "description": "If specified, the operation only succeeds if the resource's lease is active and matches this ID.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "leaseId",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "lease-access-conditions"
            }
          },
          "x-ms-client-name": "leaseId",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "lease-access-conditions"
          }
        },
        "FilterBlobsInclude": {
          "name": "include",
          "in": "query",
          "description": "Include this parameter to specify one or more datasets to include in the response.",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "none",
                "versions",
                "metadata",
                "deleted",
                "system",
                "copy",
                "deleted",
                "metadata",
                "snapshots",
                "uncommittedblobs",
                "versions",
                "tags",
                "immutabilitypolicy",
                "legalhold",
                "deletedwithversions"
              ],
              "x-ms-enum": {
                "name": "FilterBlobsIncludeItem",
                "modelAsString": false
              }
            },
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "Delimiter": {
          "name": "delimiter",
          "in": "query",
          "description": "When the request includes this parameter, the operation returns a BlobPrefix element in the response body that acts as a placeholder for all blobs whose names begin with the same substring up to the appearance of the delimiter character. The delimiter may be a single character or a string.",
          "required": false,
          "schema": {
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "Blob": {
          "name": "blob",
          "in": "path",
          "description": "The blob name.",
          "required": true,
          "schema": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "Snapshot": {
          "name": "snapshot",
          "in": "query",
          "description": "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\">Creating a Snapshot of a Blob.</a>",
          "schema": {
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "VersionId": {
          "name": "versionid",
          "in": "query",
          "description": "The version id parameter is an opaque DateTime value that, when present, specifies the version of the blob to operate on. It's for service version 2019-10-10 and newer.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "versionId",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "versionId",
          "x-ms-parameter-location": "method"
        },
        "Range": {
          "name": "x-ms-range",
          "in": "header",
          "description": "Return only the bytes of the blob in the specified range.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "range",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "range",
          "x-ms-parameter-location": "method"
        },
        "GetRangeContentMD5": {
          "name": "x-ms-range-get-content-md5",
          "in": "header",
          "description": "When set to true and specified together with the Range, the service returns the MD5 hash for the range, as long as the range is less than or equal to 4 MB in size.",
          "schema": {
            "type": "boolean",
            "x-ms-client-name": "rangeGetContentMD5",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "rangeGetContentMD5",
          "x-ms-parameter-location": "method"
        },
        "GetRangeContentCRC64": {
          "name": "x-ms-range-get-content-crc64",
          "in": "header",
          "description": "When set to true and specified together with the Range, the service returns the CRC64 hash for the range, as long as the range is less than or equal to 4 MB in size.",
          "schema": {
            "type": "boolean",
            "x-ms-client-name": "rangeGetContentCRC64",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "rangeGetContentCRC64",
          "x-ms-parameter-location": "method"
        },
        "StructuredBodyGet": {
          "name": "x-ms-structured-body",
          "in": "header",
          "description": "Specifies the response content should be returned as a structured message and specifies the message schema version and properties.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "StructuredBodyType",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "StructuredBodyType",
          "x-ms-parameter-location": "method"
        },
        "EncryptionKey": {
          "name": "x-ms-encryption-key",
          "in": "header",
          "description": "Optional. Specifies the encryption key to use to encrypt the data provided in the request. If not specified, encryption is performed with the root account encryption key.  For more information, see Encryption at Rest for Azure Storage Services.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "encryptionKey",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "cpk-info"
            }
          },
          "x-ms-client-name": "encryptionKey",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "cpk-info"
          }
        },
        "EncryptionKeySha256": {
          "name": "x-ms-encryption-key-sha256",
          "in": "header",
          "description": "The SHA-256 hash of the provided encryption key. Must be provided if the x-ms-encryption-key header is provided.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "encryptionKeySha256",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "cpk-info"
            }
          },
          "x-ms-client-name": "encryptionKeySha256",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "cpk-info"
          }
        },
        "EncryptionAlgorithm": {
          "name": "x-ms-encryption-algorithm",
          "in": "header",
          "description": "The algorithm used to produce the encryption key hash. Currently, the only accepted value is \"AES256\". Must be provided if the x-ms-encryption-key header is provided.",
          "schema": {
            "type": "string",
            "enum": [
              "AES256"
            ],
            "x-ms-client-name": "encryptionAlgorithm",
            "x-ms-enum": {
              "name": "EncryptionAlgorithmType",
              "modelAsString": false
            },
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "cpk-info"
            }
          },
          "x-ms-client-name": "encryptionAlgorithm",
          "x-ms-enum": {
            "name": "EncryptionAlgorithmType",
            "modelAsString": false
          },
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "cpk-info"
          }
        },
        "IfModifiedSince": {
          "name": "If-Modified-Since",
          "in": "header",
          "description": "Specify this header value to operate only on a blob if it has been modified since the specified date/time.",
          "schema": {
            "type": "string",
            "format": "date-time-rfc1123",
            "x-ms-client-name": "ifModifiedSince",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "modified-access-conditions"
            }
          },
          "x-ms-client-name": "ifModifiedSince",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "modified-access-conditions"
          }
        },
        "IfUnmodifiedSince": {
          "name": "If-Unmodified-Since",
          "in": "header",
          "description": "Specify this header value to operate only on a blob if it has not been modified since the specified date/time.",
          "schema": {
            "type": "string",
            "format": "date-time-rfc1123",
            "x-ms-client-name": "ifUnmodifiedSince",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "modified-access-conditions"
            }
          },
          "x-ms-client-name": "ifUnmodifiedSince",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "modified-access-conditions"
          }
        },
        "IfMatch": {
          "name": "If-Match",
          "in": "header",
          "description": "Specify an ETag value to operate only on blobs with a matching value.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "ifMatch",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "modified-access-conditions"
            }
          },
          "x-ms-client-name": "ifMatch",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "modified-access-conditions"
          }
        },
        "IfNoneMatch": {
          "name": "If-None-Match",
          "in": "header",
          "description": "Specify an ETag value to operate only on blobs without a matching value.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "ifNoneMatch",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "modified-access-conditions"
            }
          },
          "x-ms-client-name": "ifNoneMatch",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "modified-access-conditions"
          }
        },
        "IfTags": {
          "name": "x-ms-if-tags",
          "in": "header",
          "description": "Specify a SQL where clause on blob tags to operate only on blobs with a matching value.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "ifTags",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "modified-access-conditions"
            }
          },
          "x-ms-client-name": "ifTags",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "modified-access-conditions"
          }
        },
        "PrevSnapshot": {
          "name": "prevsnapshot",
          "in": "query",
          "description": "Optional in version 2015-07-08 and newer. The prevsnapshot parameter is a DateTime value that specifies that the response will contain only pages that were changed between target blob and previous snapshot. Changed pages include both updated and cleared pages. The target blob may be a snapshot, as long as the snapshot specified by prevsnapshot is the older of the two. Note that incremental snapshots are currently supported only for blobs created on or after January 1, 2016.",
          "schema": {
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "PrevSnapshotUrl": {
          "name": "x-ms-previous-snapshot-url",
          "in": "header",
          "description": "Optional. This header is only supported in service versions 2019-04-19 and after and specifies the URL of a previous snapshot of the target blob. The response will only contain pages that were changed between the target blob and its previous snapshot.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "prevSnapshotUrl",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "prevSnapshotUrl",
          "x-ms-parameter-location": "method"
        },
        "Comp": {
          "name": "comp",
          "in": "query",
          "description": "Optional.  Only possible value is 'permanent', which specifies to permanently delete a blob if blob soft delete is enabled.",
          "schema": {
            "type": "string"
          }
        },
        "AccessTierOptional": {
          "name": "x-ms-access-tier",
          "in": "header",
          "description": "Optional. Indicates the tier to be set on the blob.",
          "schema": {
            "type": "string",
            "enum": [
              "P4",
              "P6",
              "P10",
              "P15",
              "P20",
              "P30",
              "P40",
              "P50",
              "P60",
              "P70",
              "P80",
              "Hot",
              "Cool",
              "Archive",
              "Cold"
            ],
            "x-ms-client-name": "tier",
            "x-ms-enum": {
              "name": "AccessTier",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "tier",
          "x-ms-enum": {
            "name": "AccessTier",
            "modelAsString": true
          },
          "x-ms-parameter-location": "method"
        },
        "BlobCacheControl": {
          "name": "x-ms-blob-cache-control",
          "in": "header",
          "description": "Optional. Sets the blob's cache control. If specified, this property is stored with the blob and returned with a read request.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "blobCacheControl",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "blob-HTTP-headers"
            }
          },
          "x-ms-client-name": "blobCacheControl",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "blob-HTTP-headers"
          }
        },
        "BlobConditionAppendPos": {
          "name": "x-ms-blob-condition-appendpos",
          "in": "header",
          "description": "Optional conditional header, used only for the Append Block operation. A number indicating the byte offset to compare. Append Block will succeed only if the append position is equal to this number. If it is not, the request will fail with the AppendPositionConditionNotMet error (HTTP status code 412 - Precondition Failed).",
          "schema": {
            "type": "integer",
            "format": "int64",
            "x-ms-client-name": "appendPosition",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "append-position-access-conditions"
            }
          },
          "x-ms-client-name": "appendPosition",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "append-position-access-conditions"
          }
        },
        "BlobConditionMaxSize": {
          "name": "x-ms-blob-condition-maxsize",
          "in": "header",
          "description": "Optional conditional header. The max length in bytes permitted for the append blob. If the Append Block operation would cause the blob to exceed that limit or if the blob size is already greater than the value specified in this header, the request will fail with MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).",
          "schema": {
            "type": "integer",
            "format": "int64",
            "x-ms-client-name": "maxSize",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "append-position-access-conditions"
            }
          },
          "x-ms-client-name": "maxSize",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "append-position-access-conditions"
          }
        },
        "BlobContentDisposition": {
          "name": "x-ms-blob-content-disposition",
          "in": "header",
          "description": "Optional. Sets the blob's Content-Disposition header.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "blobContentDisposition",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "blob-HTTP-headers"
            }
          },
          "x-ms-client-name": "blobContentDisposition",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "blob-HTTP-headers"
          }
        },
        "BlobContentEncoding": {
          "name": "x-ms-blob-content-encoding",
          "in": "header",
          "description": "Optional. Sets the blob's content encoding. If specified, this property is stored with the blob and returned with a read request.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "blobContentEncoding",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "blob-HTTP-headers"
            }
          },
          "x-ms-client-name": "blobContentEncoding",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "blob-HTTP-headers"
          }
        },
        "BlobContentLanguage": {
          "name": "x-ms-blob-content-language",
          "in": "header",
          "description": "Optional. Set the blob's content language. If specified, this property is stored with the blob and returned with a read request.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "blobContentLanguage",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "blob-HTTP-headers"
            }
          },
          "x-ms-client-name": "blobContentLanguage",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "blob-HTTP-headers"
          }
        },
        "BlobContentLengthRequired": {
          "name": "x-ms-blob-content-length",
          "in": "header",
          "description": "This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64",
            "x-ms-client-name": "blobContentLength",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "blobContentLength",
          "x-ms-parameter-location": "method"
        },
        "BlobContentMD5": {
          "name": "x-ms-blob-content-md5",
          "in": "header",
          "description": "Optional. An MD5 hash of the blob content. Note that this hash is not validated, as the hashes for the individual blocks were validated when each was uploaded.",
          "schema": {
            "type": "string",
            "format": "byte",
            "x-ms-client-name": "blobContentMD5",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "blob-HTTP-headers"
            }
          },
          "x-ms-client-name": "blobContentMD5",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "blob-HTTP-headers"
          }
        },
        "BlobContentType": {
          "name": "x-ms-blob-content-type",
          "in": "header",
          "description": "Optional. Sets the blob's content type. If specified, this property is stored with the blob and returned with a read request.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "blobContentType",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "blob-HTTP-headers"
            }
          },
          "x-ms-client-name": "blobContentType",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "blob-HTTP-headers"
          }
        },
        "BlobExpiryOptions": {
          "name": "x-ms-expiry-option",
          "in": "header",
          "description": "Required. Indicates mode of the expiry time",
          "required": false,
          "schema": {
            "type": "string",
            "enum": [
              "NeverExpire",
              "RelativeToCreation",
              "RelativeToNow",
              "Absolute"
            ],
            "x-ms-client-name": "ExpiryOptions",
            "x-ms-enum": {
              "name": "BlobExpiryOptions",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "ExpiryOptions",
          "x-ms-enum": {
            "name": "BlobExpiryOptions",
            "modelAsString": true
          },
          "x-ms-parameter-location": "method"
        },
        "BlobExpiryTime": {
          "name": "x-ms-expiry-time",
          "in": "header",
          "description": "The time to set the blob to expiry",
          "schema": {
            "type": "string",
            "x-ms-client-name": "ExpiresOn",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "ExpiresOn",
          "x-ms-parameter-location": "method"
        },
        "BlobSequenceNumber": {
          "name": "x-ms-blob-sequence-number",
          "in": "header",
          "description": "Set for page blobs only. The sequence number is a user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 2^63 - 1.",
          "schema": {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "x-ms-client-name": "blobSequenceNumber",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "blobSequenceNumber",
          "x-ms-parameter-location": "method"
        },
        "BlobTagsHeader": {
          "name": "x-ms-tags",
          "in": "header",
          "description": "Optional.  Used to set blob tags in various blob operations.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "BlobTagsString",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "BlobTagsString",
          "x-ms-parameter-location": "method"
        },
        "BlockId": {
          "name": "blockid",
          "in": "query",
          "description": "A valid Base64 string value that identifies the block. Prior to encoding, the string must be less than or equal to 64 bytes in size. For a given blob, the length of the value specified for the blockid parameter must be the same size for each block.",
          "required": false,
          "schema": {
            "type": "string",
            "x-ms-client-name": "blockId",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "blockId",
          "x-ms-parameter-location": "method"
        },
        "ContentCrc64": {
          "name": "x-ms-content-crc64",
          "in": "header",
          "description": "Specify the transactional crc64 for the body, to be validated by the service.",
          "schema": {
            "type": "string",
            "format": "byte",
            "x-ms-client-name": "transactionalContentCrc64",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "transactionalContentCrc64",
          "x-ms-parameter-location": "method"
        },
        "ContentLength": {
          "name": "Content-Length",
          "in": "header",
          "description": "The length of the request.",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64",
            "x-ms-parameter-location": "method"
          },
          "x-ms-parameter-location": "method"
        },
        "ContentMD5": {
          "name": "Content-MD5",
          "in": "header",
          "description": "Specify the transactional md5 for the body, to be validated by the service.",
          "schema": {
            "type": "string",
            "format": "byte",
            "x-ms-client-name": "transactionalContentMD5",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "transactionalContentMD5",
          "x-ms-parameter-location": "method"
        },
        "CopyId": {
          "name": "copyid",
          "in": "query",
          "description": "The copy identifier provided in the x-ms-copy-id header of the original Copy Blob operation.",
          "required": false,
          "schema": {
            "type": "string",
            "x-ms-client-name": "copyId",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "copyId",
          "x-ms-parameter-location": "method"
        },
        "CopySource": {
          "name": "x-ms-copy-source",
          "in": "header",
          "description": "Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature.",
          "required": false,
          "schema": {
            "type": "string",
            "x-ms-client-name": "copySource",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "copySource",
          "x-ms-parameter-location": "method"
        },
        "CopySourceAuthorization": {
          "name": "x-ms-copy-source-authorization",
          "in": "header",
          "description": "Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "copySourceAuthorization",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "copySourceAuthorization",
          "x-ms-parameter-location": "method"
        },
        "CopySourceBlobProperties": {
          "name": "x-ms-copy-source-blob-properties",
          "in": "header",
          "description": "Optional, default is true.  Indicates if properties from the source blob should be copied.",
          "schema": {
            "type": "boolean",
            "x-ms-client-name": "copySourceBlobProperties",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "copySourceBlobProperties",
          "x-ms-parameter-location": "method"
        },
        "CopySourceTags": {
          "name": "x-ms-copy-source-tag-option",
          "in": "header",
          "description": "Optional, default 'replace'.  Indicates if source tags should be copied or replaced with the tags specified by x-ms-tags.",
          "schema": {
            "type": "string",
            "enum": [
              "REPLACE",
              "COPY"
            ],
            "x-ms-client-name": "copySourceTags",
            "x-ms-enum": {
              "name": "BlobCopySourceTags",
              "modelAsString": false
            },
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "copySourceTags",
          "x-ms-enum": {
            "name": "BlobCopySourceTags",
            "modelAsString": false
          },
          "x-ms-parameter-location": "method"
        },
        "EncryptionScope": {
          "name": "x-ms-encryption-scope",
          "in": "header",
          "description": "Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to encrypt the data provided in the request. If not specified, encryption is performed with the default account encryption scope.  For more information, see Encryption at Rest for Azure Storage Services.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "encryptionScope",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "cpk-scope-info"
            }
          },
          "x-ms-client-name": "encryptionScope",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "cpk-scope-info"
          }
        },
        "IfSequenceNumberEqualTo": {
          "name": "x-ms-if-sequence-number-eq",
          "in": "header",
          "description": "Specify this header value to operate only on a blob if it has the specified sequence number.",
          "schema": {
            "type": "integer",
            "format": "int64",
            "x-ms-client-name": "ifSequenceNumberEqualTo",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "sequence-number-access-conditions"
            }
          },
          "x-ms-client-name": "ifSequenceNumberEqualTo",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "sequence-number-access-conditions"
          }
        },
        "IfSequenceNumberLessThan": {
          "name": "x-ms-if-sequence-number-lt",
          "in": "header",
          "description": "Specify this header value to operate only on a blob if it has a sequence number less than the specified.",
          "schema": {
            "type": "integer",
            "format": "int64",
            "x-ms-client-name": "ifSequenceNumberLessThan",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "sequence-number-access-conditions"
            }
          },
          "x-ms-client-name": "ifSequenceNumberLessThan",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "sequence-number-access-conditions"
          }
        },
        "IfSequenceNumberLessThanOrEqualTo": {
          "name": "x-ms-if-sequence-number-le",
          "in": "header",
          "description": "Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified.",
          "schema": {
            "type": "integer",
            "format": "int64",
            "x-ms-client-name": "ifSequenceNumberLessThanOrEqualTo",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "sequence-number-access-conditions"
            }
          },
          "x-ms-client-name": "ifSequenceNumberLessThanOrEqualTo",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "sequence-number-access-conditions"
          }
        },
        "ImmutabilityPolicyExpiry": {
          "name": "x-ms-immutability-policy-until-date",
          "in": "header",
          "description": "Specifies the date time when the blobs immutability policy is set to expire.",
          "schema": {
            "type": "string",
            "format": "date-time-rfc1123",
            "x-ms-client-name": "immutabilityPolicyExpiry",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "immutabilityPolicyExpiry",
          "x-ms-parameter-location": "method"
        },
        "ImmutabilityPolicyMode": {
          "name": "x-ms-immutability-policy-mode",
          "in": "header",
          "description": "Specifies the immutability policy mode to set on the blob.",
          "schema": {
            "type": "string",
            "enum": [
              "Unlocked",
              "Locked"
            ],
            "x-ms-client-name": "immutabilityPolicyMode",
            "x-ms-enum": {
              "name": "BlobImmutabilityPolicyMode",
              "modelAsString": false
            },
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "immutabilityPolicyMode",
          "x-ms-enum": {
            "name": "BlobImmutabilityPolicyMode",
            "modelAsString": false
          },
          "x-ms-parameter-location": "method"
        },
        "LeaseBreakPeriod": {
          "name": "x-ms-lease-break-period",
          "in": "header",
          "description": "For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately.",
          "schema": {
            "type": "integer",
            "x-ms-client-name": "breakPeriod",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "breakPeriod",
          "x-ms-parameter-location": "method"
        },
        "LeaseDuration": {
          "name": "x-ms-lease-duration",
          "in": "header",
          "description": "Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires. A non-infinite lease can be between 15 and 60 seconds. A lease duration cannot be changed using renew or change.",
          "schema": {
            "type": "integer",
            "x-ms-client-name": "duration",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "duration",
          "x-ms-parameter-location": "method"
        },
        "LegalHoldOptional": {
          "name": "x-ms-legal-hold",
          "in": "header",
          "description": "Specified if a legal hold should be set on the blob.",
          "schema": {
            "type": "boolean",
            "x-ms-client-name": "legalHold",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "legalHold",
          "x-ms-parameter-location": "method"
        },
        "Metadata": {
          "name": "x-ms-meta",
          "in": "header",
          "description": "Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "metadata",
            "x-ms-parameter-location": "method",
            "x-ms-header-collection-prefix": "x-ms-meta-"
          },
          "x-ms-client-name": "metadata",
          "x-ms-parameter-location": "method",
          "x-ms-header-collection-prefix": "x-ms-meta-"
        },
        "ProposedLeaseIdOptional": {
          "name": "x-ms-proposed-lease-id",
          "in": "header",
          "description": "Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list of valid GUID string formats.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "proposedLeaseId",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "proposedLeaseId",
          "x-ms-parameter-location": "method"
        },
        "RehydratePriority": {
          "name": "x-ms-rehydrate-priority",
          "in": "header",
          "description": "Optional: Indicates the priority with which to rehydrate an archived blob.",
          "schema": {
            "type": "string",
            "enum": [
              "High",
              "Standard"
            ],
            "x-ms-client-name": "rehydratePriority",
            "x-ms-enum": {
              "name": "RehydratePriority",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "rehydratePriority",
          "x-ms-enum": {
            "name": "RehydratePriority",
            "modelAsString": true
          },
          "x-ms-parameter-location": "method"
        },
        "SealBlob": {
          "name": "x-ms-seal-blob",
          "in": "header",
          "description": "Overrides the sealed state of the destination blob.  Service version 2019-12-12 and newer.",
          "schema": {
            "type": "boolean",
            "x-ms-client-name": "SealBlob",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "SealBlob",
          "x-ms-parameter-location": "method"
        },
        "SequenceNumberAction": {
          "name": "x-ms-sequence-number-action",
          "in": "header",
          "description": "Required if the x-ms-blob-sequence-number header is set for the request. This property applies to page blobs only. This property indicates how the service should modify the blob's sequence number",
          "required": false,
          "schema": {
            "type": "string",
            "enum": [
              "max",
              "update",
              "increment"
            ],
            "x-ms-client-name": "sequenceNumberAction",
            "x-ms-parameter-location": "method",
            "x-ms-enum": {
              "name": "SequenceNumberActionType",
              "modelAsString": false
            }
          },
          "x-ms-client-name": "sequenceNumberAction",
          "x-ms-parameter-location": "method",
          "x-ms-enum": {
            "name": "SequenceNumberActionType",
            "modelAsString": false
          }
        },
        "SourceContentCRC64": {
          "name": "x-ms-source-content-crc64",
          "in": "header",
          "description": "Specify the crc64 calculated for the range of bytes that must be read from the copy source.",
          "schema": {
            "type": "string",
            "format": "byte",
            "x-ms-client-name": "sourceContentcrc64",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "sourceContentcrc64",
          "x-ms-parameter-location": "method"
        },
        "SourceContentMD5": {
          "name": "x-ms-source-content-md5",
          "in": "header",
          "description": "Specify the md5 calculated for the range of bytes that must be read from the copy source.",
          "schema": {
            "type": "string",
            "format": "byte",
            "x-ms-client-name": "sourceContentMD5",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "sourceContentMD5",
          "x-ms-parameter-location": "method"
        },
        "SourceIfMatch": {
          "name": "x-ms-source-if-match",
          "in": "header",
          "description": "Specify an ETag value to operate only on blobs with a matching value.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "sourceIfMatch",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "source-modified-access-conditions"
            }
          },
          "x-ms-client-name": "sourceIfMatch",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "source-modified-access-conditions"
          }
        },
        "SourceIfModifiedSince": {
          "name": "x-ms-source-if-modified-since",
          "in": "header",
          "description": "Specify this header value to operate only on a blob if it has been modified since the specified date/time.",
          "schema": {
            "type": "string",
            "format": "date-time-rfc1123",
            "x-ms-client-name": "sourceIfModifiedSince",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "source-modified-access-conditions"
            }
          },
          "x-ms-client-name": "sourceIfModifiedSince",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "source-modified-access-conditions"
          }
        },
        "SourceIfNoneMatch": {
          "name": "x-ms-source-if-none-match",
          "in": "header",
          "description": "Specify an ETag value to operate only on blobs without a matching value.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "sourceIfNoneMatch",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "source-modified-access-conditions"
            }
          },
          "x-ms-client-name": "sourceIfNoneMatch",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "source-modified-access-conditions"
          }
        },
        "SourceIfTags": {
          "name": "x-ms-source-if-tags",
          "in": "header",
          "description": "Specify a SQL where clause on blob tags to operate only on blobs with a matching value.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "sourceIfTags",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "source-modified-access-conditions"
            }
          },
          "x-ms-client-name": "sourceIfTags",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "source-modified-access-conditions"
          }
        },
        "SourceIfUnmodifiedSince": {
          "name": "x-ms-source-if-unmodified-since",
          "in": "header",
          "description": "Specify this header value to operate only on a blob if it has not been modified since the specified date/time.",
          "schema": {
            "type": "string",
            "format": "date-time-rfc1123",
            "x-ms-client-name": "sourceIfUnmodifiedSince",
            "x-ms-parameter-location": "method",
            "x-ms-parameter-grouping": {
              "name": "source-modified-access-conditions"
            }
          },
          "x-ms-client-name": "sourceIfUnmodifiedSince",
          "x-ms-parameter-location": "method",
          "x-ms-parameter-grouping": {
            "name": "source-modified-access-conditions"
          }
        },
        "SourceRange": {
          "name": "x-ms-source-range",
          "in": "header",
          "description": "Bytes of source data in the specified range.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "sourceRange",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "sourceRange",
          "x-ms-parameter-location": "method"
        },
        "StructuredBodyPut": {
          "name": "x-ms-structured-body",
          "in": "header",
          "description": "Required if the request body is a structured message. Specifies the message schema version and properties.",
          "schema": {
            "type": "string",
            "x-ms-client-name": "StructuredBodyType",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "StructuredBodyType",
          "x-ms-parameter-location": "method"
        },
        "StructuredContentLength": {
          "name": "x-ms-structured-content-length",
          "in": "header",
          "description": "Required if the request body is a structured message. Specifies the length of the blob/file content inside the message body. Will always be smaller than Content-Length.",
          "schema": {
            "type": "integer",
            "format": "int64",
            "x-ms-client-name": "StructuredContentLength",
            "x-ms-parameter-location": "method"
          },
          "x-ms-client-name": "StructuredContentLength",
          "x-ms-parameter-location": "method"
        }
      },
      "schemas": {
        "StorageError": {
          "type": "object",
          "properties": {
            "Message": {
              "type": "string"
            }
          }
        },
        "RetentionPolicy": {
          "required": [
            "Enabled"
          ],
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Indicates whether a retention policy is enabled for the storage service"
            },
            "Days": {
              "minimum": 1,
              "type": "integer",
              "description": "Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted"
            },
            "AllowPermanentDelete": {
              "type": "boolean",
              "description": "Indicates whether permanent delete is allowed on this storage account."
            }
          },
          "description": "the retention policy which determines how long the associated data should persist"
        },
        "Logging": {
          "required": [
            "Delete",
            "Read",
            "RetentionPolicy",
            "Version",
            "Write"
          ],
          "type": "object",
          "properties": {
            "Version": {
              "type": "string",
              "description": "The version of Storage Analytics to configure."
            },
            "Delete": {
              "type": "boolean",
              "description": "Indicates whether all delete requests should be logged."
            },
            "Read": {
              "type": "boolean",
              "description": "Indicates whether all read requests should be logged."
            },
            "Write": {
              "type": "boolean",
              "description": "Indicates whether all write requests should be logged."
            },
            "RetentionPolicy": {
              "$ref": "#/components/schemas/RetentionPolicy"
            }
          },
          "description": "Azure Analytics Logging settings."
        },
        "Metrics": {
          "required": [
            "Enabled"
          ],
          "type": "object",
          "properties": {
            "Version": {
              "type": "string",
              "description": "The version of Storage Analytics to configure."
            },
            "Enabled": {
              "type": "boolean",
              "description": "Indicates whether metrics are enabled for the Blob service."
            },
            "IncludeAPIs": {
              "type": "boolean",
              "description": "Indicates whether metrics should generate summary statistics for called API operations."
            },
            "RetentionPolicy": {
              "$ref": "#/components/schemas/RetentionPolicy"
            }
          },
          "description": "a summary of request statistics grouped by API in hour or minute aggregates for blobs"
        },
        "CorsRule": {
          "required": [
            "AllowedHeaders",
            "AllowedMethods",
            "AllowedOrigins",
            "ExposedHeaders",
            "MaxAgeInSeconds"
          ],
          "type": "object",
          "properties": {
            "AllowedOrigins": {
              "type": "string",
              "description": "The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS."
            },
            "AllowedMethods": {
              "type": "string",
              "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated)"
            },
            "AllowedHeaders": {
              "type": "string",
              "description": "the request headers that the origin domain may specify on the CORS request."
            },
            "ExposedHeaders": {
              "type": "string",
              "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer"
            },
            "MaxAgeInSeconds": {
              "minimum": 0,
              "type": "integer",
              "description": "The maximum amount time that a browser should cache the preflight OPTIONS request."
            }
          },
          "description": "CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain"
        },
        "StaticWebsite": {
          "required": [
            "Enabled"
          ],
          "type": "object",
          "properties": {
            "Enabled": {
              "type": "boolean",
              "description": "Indicates whether this account is hosting a static website"
            },
            "IndexDocument": {
              "type": "string",
              "description": "The default name of the index page under each directory"
            },
            "ErrorDocument404Path": {
              "type": "string",
              "description": "The absolute path of the custom 404 page"
            },
            "DefaultIndexDocumentPath": {
              "type": "string",
              "description": "Absolute path of the default index page"
            }
          },
          "description": "The properties that enable an account to host a static website"
        },
        "StorageServiceProperties": {
          "type": "object",
          "properties": {
            "Logging": {
              "$ref": "#/components/schemas/Logging"
            },
            "HourMetrics": {
              "$ref": "#/components/schemas/Metrics"
            },
            "MinuteMetrics": {
              "$ref": "#/components/schemas/Metrics"
            },
            "Cors": {
              "type": "array",
              "description": "The set of CORS rules.",
              "xml": {
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/CorsRule"
              }
            },
            "DefaultServiceVersion": {
              "type": "string",
              "description": "The default version to use for requests to the Blob service if an incoming request's version is not specified. Possible values include version 2008-10-27 and all more recent versions"
            },
            "DeleteRetentionPolicy": {
              "$ref": "#/components/schemas/RetentionPolicy"
            },
            "StaticWebsite": {
              "$ref": "#/components/schemas/StaticWebsite"
            }
          },
          "description": "Storage Service Properties."
        },
        "LeaseStatus": {
          "type": "string",
          "enum": [
            "locked",
            "unlocked"
          ],
          "x-ms-enum": {
            "name": "LeaseStatusType",
            "modelAsString": false
          }
        },
        "LeaseState": {
          "type": "string",
          "enum": [
            "available",
            "leased",
            "expired",
            "breaking",
            "broken"
          ],
          "x-ms-enum": {
            "name": "LeaseStateType",
            "modelAsString": false
          }
        },
        "LeaseDuration": {
          "type": "string",
          "enum": [
            "infinite",
            "fixed"
          ],
          "x-ms-enum": {
            "name": "LeaseDurationType",
            "modelAsString": false
          }
        },
        "PublicAccessType": {
          "type": "string",
          "enum": [
            "container",
            "blob"
          ],
          "x-ms-enum": {
            "name": "PublicAccessType",
            "modelAsString": true
          }
        },
        "ContainerProperties": {
          "required": [
            "Etag",
            "Last-Modified"
          ],
          "type": "object",
          "properties": {
            "Last-Modified": {
              "type": "string",
              "format": "date-time-rfc1123"
            },
            "Etag": {
              "type": "string"
            },
            "LeaseStatus": {
              "$ref": "#/components/schemas/LeaseStatus"
            },
            "LeaseState": {
              "$ref": "#/components/schemas/LeaseState"
            },
            "LeaseDuration": {
              "$ref": "#/components/schemas/LeaseDuration"
            },
            "PublicAccess": {
              "$ref": "#/components/schemas/PublicAccessType"
            },
            "HasImmutabilityPolicy": {
              "type": "boolean"
            },
            "HasLegalHold": {
              "type": "boolean"
            },
            "DefaultEncryptionScope": {
              "type": "string"
            },
            "DenyEncryptionScopeOverride": {
              "type": "boolean",
              "x-ms-client-name": "PreventEncryptionScopeOverride"
            },
            "DeletedTime": {
              "type": "string",
              "format": "date-time-rfc1123"
            },
            "RemainingRetentionDays": {
              "type": "integer"
            },
            "ImmutableStorageWithVersioningEnabled": {
              "type": "boolean",
              "description": "Indicates if version level worm is enabled on this container.",
              "x-ms-client-name": "IsImmutableStorageWithVersioningEnabled"
            }
          },
          "description": "Properties of a container"
        },
        "ContainerMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "xml": {
            "name": "Metadata"
          }
        },
        "ContainerItem": {
          "required": [
            "Name",
            "Properties"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "type": "string"
            },
            "Deleted": {
              "type": "boolean"
            },
            "Version": {
              "type": "string"
            },
            "Properties": {
              "$ref": "#/components/schemas/ContainerProperties"
            },
            "Metadata": {
              "$ref": "#/components/schemas/ContainerMetadata"
            }
          },
          "description": "An Azure Storage container",
          "xml": {
            "name": "Container"
          }
        },
        "ListContainersSegmentResponse": {
          "required": [
            "ContainerItems",
            "ServiceEndpoint"
          ],
          "type": "object",
          "properties": {
            "ServiceEndpoint": {
              "type": "string",
              "xml": {
                "attribute": true
              }
            },
            "Prefix": {
              "type": "string"
            },
            "Marker": {
              "type": "string"
            },
            "MaxResults": {
              "type": "integer"
            },
            "ContainerItems": {
              "type": "array",
              "xml": {
                "name": "Containers",
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/ContainerItem"
              }
            },
            "NextMarker": {
              "type": "string"
            }
          },
          "description": "An enumeration of containers",
          "xml": {
            "name": "EnumerationResults"
          }
        },
        "GeoReplication": {
          "required": [
            "LastSyncTime",
            "Status"
          ],
          "type": "object",
          "properties": {
            "Status": {
              "type": "string",
              "description": "The status of the secondary location",
              "enum": [
                "live",
                "bootstrap",
                "unavailable"
              ],
              "x-ms-enum": {
                "name": "GeoReplicationStatusType",
                "modelAsString": true
              }
            },
            "LastSyncTime": {
              "type": "string",
              "description": "A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads.",
              "format": "date-time-rfc1123"
            }
          },
          "description": "Geo-Replication information for the Secondary Storage Service"
        },
        "StorageServiceStats": {
          "type": "object",
          "properties": {
            "GeoReplication": {
              "$ref": "#/components/schemas/GeoReplication"
            }
          },
          "description": "Stats for the storage service."
        },
        "BlobTag": {
          "required": [
            "Key",
            "Value"
          ],
          "type": "object",
          "properties": {
            "Key": {
              "type": "string"
            },
            "Value": {
              "type": "string"
            }
          },
          "xml": {
            "name": "Tag"
          }
        },
        "BlobTags": {
          "required": [
            "BlobTagSet"
          ],
          "type": "object",
          "properties": {
            "BlobTagSet": {
              "type": "array",
              "xml": {
                "name": "TagSet",
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/BlobTag"
              }
            }
          },
          "description": "Blob tags",
          "xml": {
            "name": "Tags"
          }
        },
        "FilterBlobItem": {
          "required": [
            "ContainerName",
            "Name"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "type": "string"
            },
            "ContainerName": {
              "type": "string"
            },
            "Tags": {
              "$ref": "#/components/schemas/BlobTags"
            },
            "VersionId": {
              "type": "string"
            },
            "IsCurrentVersion": {
              "type": "boolean"
            }
          },
          "description": "Blob info from a Filter Blobs API call",
          "xml": {
            "name": "Blob"
          }
        },
        "FilterBlobSegment": {
          "required": [
            "Blobs",
            "ServiceEndpoint",
            "Where"
          ],
          "type": "object",
          "properties": {
            "ServiceEndpoint": {
              "type": "string",
              "xml": {
                "attribute": true
              }
            },
            "Where": {
              "type": "string"
            },
            "Blobs": {
              "type": "array",
              "xml": {
                "name": "Blobs",
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/FilterBlobItem"
              }
            },
            "NextMarker": {
              "type": "string"
            }
          },
          "description": "The result of a Filter Blobs API call",
          "xml": {
            "name": "EnumerationResults"
          }
        },
        "AccessPolicy": {
          "type": "object",
          "properties": {
            "Start": {
              "type": "string",
              "description": "the date-time the policy is active",
              "format": "date-time"
            },
            "Expiry": {
              "type": "string",
              "description": "the date-time the policy expires",
              "format": "date-time"
            },
            "Permission": {
              "type": "string",
              "description": "the permissions for the acl policy"
            }
          },
          "description": "An Access policy"
        },
        "SignedIdentifier": {
          "required": [
            "AccessPolicy",
            "Id"
          ],
          "type": "object",
          "properties": {
            "Id": {
              "type": "string",
              "description": "a unique id"
            },
            "AccessPolicy": {
              "$ref": "#/components/schemas/AccessPolicy"
            }
          },
          "description": "signed identifier",
          "xml": {
            "name": "SignedIdentifier"
          }
        },
        "SignedIdentifiers": {
          "type": "array",
          "description": "a collection of signed identifiers",
          "xml": {
            "name": "SignedIdentifiers",
            "wrapped": true
          },
          "items": {
            "$ref": "#/components/schemas/SignedIdentifier"
          }
        },
        "BlobName": {
          "type": "object",
          "properties": {
            "Encoded": {
              "type": "boolean",
              "description": "Indicates if the blob name is encoded.",
              "xml": {
                "name": "Encoded",
                "attribute": true
              }
            },
            "content": {
              "type": "string",
              "description": "The name of the blob.",
              "xml": {}
            }
          }
        },
        "CopyStatus": {
          "type": "string",
          "enum": [
            "pending",
            "success",
            "aborted",
            "failed"
          ],
          "x-ms-enum": {
            "name": "CopyStatusType",
            "modelAsString": false
          }
        },
        "AccessTier": {
          "type": "string",
          "enum": [
            "P4",
            "P6",
            "P10",
            "P15",
            "P20",
            "P30",
            "P40",
            "P50",
            "P60",
            "P70",
            "P80",
            "Hot",
            "Cool",
            "Archive",
            "Premium",
            "Cold"
          ],
          "x-ms-enum": {
            "name": "AccessTier",
            "modelAsString": true
          }
        },
        "ArchiveStatus": {
          "type": "string",
          "enum": [
            "rehydrate-pending-to-hot",
            "rehydrate-pending-to-cool",
            "rehydrate-pending-to-cold"
          ],
          "x-ms-enum": {
            "name": "ArchiveStatus",
            "modelAsString": true
          }
        },
        "RehydratePriority": {
          "type": "string",
          "description": "If an object is in rehydrate pending state then this header is returned with priority of rehydrate. Valid values are High and Standard.",
          "xml": {
            "name": "RehydratePriority"
          },
          "enum": [
            "High",
            "Standard"
          ],
          "x-ms-enum": {
            "name": "RehydratePriority",
            "modelAsString": true
          }
        },
        "BlobPropertiesInternal": {
          "required": [
            "Etag",
            "Last-Modified"
          ],
          "type": "object",
          "properties": {
            "Creation-Time": {
              "type": "string",
              "format": "date-time-rfc1123"
            },
            "Last-Modified": {
              "type": "string",
              "format": "date-time-rfc1123"
            },
            "Etag": {
              "type": "string"
            },
            "Content-Length": {
              "type": "integer",
              "description": "Size in bytes",
              "format": "int64"
            },
            "Content-Type": {
              "type": "string"
            },
            "Content-Encoding": {
              "type": "string"
            },
            "Content-Language": {
              "type": "string"
            },
            "Content-MD5": {
              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
              "type": "string",
              "format": "byte"
            },
            "Content-Disposition": {
              "type": "string"
            },
            "Cache-Control": {
              "type": "string"
            },
            "x-ms-blob-sequence-number": {
              "type": "integer",
              "format": "int64",
              "x-ms-client-name": "blobSequenceNumber"
            },
            "BlobType": {
              "type": "string",
              "enum": [
                "BlockBlob",
                "PageBlob",
                "AppendBlob"
              ],
              "x-ms-enum": {
                "name": "BlobType",
                "modelAsString": false
              }
            },
            "LeaseStatus": {
              "$ref": "#/components/schemas/LeaseStatus"
            },
            "LeaseState": {
              "$ref": "#/components/schemas/LeaseState"
            },
            "LeaseDuration": {
              "$ref": "#/components/schemas/LeaseDuration"
            },
            "CopyId": {
              "type": "string"
            },
            "CopyStatus": {
              "$ref": "#/components/schemas/CopyStatus"
            },
            "CopySource": {
              "type": "string"
            },
            "CopyProgress": {
              "type": "string"
            },
            "CopyCompletionTime": {
              "type": "string",
              "format": "date-time-rfc1123"
            },
            "CopyStatusDescription": {
              "type": "string"
            },
            "ServerEncrypted": {
              "type": "boolean"
            },
            "IncrementalCopy": {
              "type": "boolean"
            },
            "DestinationSnapshot": {
              "type": "string"
            },
            "DeletedTime": {
              "type": "string",
              "format": "date-time-rfc1123"
            },
            "RemainingRetentionDays": {
              "type": "integer"
            },
            "AccessTier": {
              "$ref": "#/components/schemas/AccessTier"
            },
            "AccessTierInferred": {
              "type": "boolean"
            },
            "ArchiveStatus": {
              "$ref": "#/components/schemas/ArchiveStatus"
            },
            "CustomerProvidedKeySha256": {
              "type": "string"
            },
            "EncryptionScope": {
              "type": "string",
              "description": "The name of the encryption scope under which the blob is encrypted."
            },
            "AccessTierChangeTime": {
              "type": "string",
              "format": "date-time-rfc1123"
            },
            "TagCount": {
              "type": "integer"
            },
            "Expiry-Time": {
              "type": "string",
              "format": "date-time-rfc1123",
              "x-ms-client-name": "ExpiresOn"
            },
            "Sealed": {
              "type": "boolean",
              "x-ms-client-name": "IsSealed"
            },
            "RehydratePriority": {
              "$ref": "#/components/schemas/RehydratePriority"
            },
            "LastAccessTime": {
              "type": "string",
              "format": "date-time-rfc1123",
              "x-ms-client-name": "LastAccessedOn"
            },
            "ImmutabilityPolicyUntilDate": {
              "type": "string",
              "format": "date-time-rfc1123",
              "x-ms-client-name": "ImmutabilityPolicyExpiresOn"
            },
            "ImmutabilityPolicyMode": {
              "type": "string",
              "enum": [
                "Mutable",
                "Unlocked",
                "Locked"
              ],
              "x-ms-enum": {
                "name": "BlobImmutabilityPolicyMode",
                "modelAsString": false
              }
            },
            "LegalHold": {
              "type": "boolean"
            }
          },
          "description": "Properties of a blob",
          "xml": {
            "name": "Properties"
          }
        },
        "BlobMetadata": {
          "type": "object",
          "properties": {
            "Encrypted": {
              "type": "string",
              "xml": {
                "attribute": true
              }
            }
          },
          "additionalProperties": {
            "type": "string"
          },
          "xml": {
            "name": "Metadata"
          }
        },
        "ObjectReplicationMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "xml": {
            "name": "OrMetadata"
          }
        },
        "BlobItemInternal": {
          "required": [
            "Deleted",
            "Name",
            "Properties",
            "Snapshot"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "$ref": "#/components/schemas/BlobName"
            },
            "Deleted": {
              "type": "boolean"
            },
            "Snapshot": {
              "type": "string"
            },
            "VersionId": {
              "type": "string"
            },
            "IsCurrentVersion": {
              "type": "boolean"
            },
            "Properties": {
              "$ref": "#/components/schemas/BlobPropertiesInternal"
            },
            "Metadata": {
              "$ref": "#/components/schemas/BlobMetadata"
            },
            "BlobTags": {
              "$ref": "#/components/schemas/BlobTags"
            },
            "ObjectReplicationMetadata": {
              "$ref": "#/components/schemas/ObjectReplicationMetadata"
            },
            "HasVersionsOnly": {
              "type": "boolean"
            }
          },
          "description": "An Azure Storage blob",
          "xml": {
            "name": "Blob"
          }
        },
        "BlobFlatListSegment": {
          "required": [
            "BlobItems"
          ],
          "type": "object",
          "properties": {
            "BlobItems": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlobItemInternal"
              }
            }
          },
          "xml": {
            "name": "Blobs"
          }
        },
        "ListBlobsFlatSegmentResponse": {
          "required": [
            "ContainerName",
            "Segment",
            "ServiceEndpoint"
          ],
          "type": "object",
          "properties": {
            "ServiceEndpoint": {
              "type": "string",
              "xml": {
                "attribute": true
              }
            },
            "ContainerName": {
              "type": "string",
              "xml": {
                "attribute": true
              }
            },
            "Prefix": {
              "type": "string"
            },
            "Marker": {
              "type": "string"
            },
            "MaxResults": {
              "type": "integer"
            },
            "Segment": {
              "$ref": "#/components/schemas/BlobFlatListSegment"
            },
            "NextMarker": {
              "type": "string"
            }
          },
          "description": "An enumeration of blobs",
          "xml": {
            "name": "EnumerationResults"
          }
        },
        "BlobPrefix": {
          "required": [
            "Name"
          ],
          "type": "object",
          "properties": {
            "Name": {
              "$ref": "#/components/schemas/BlobName"
            }
          }
        },
        "BlobHierarchyListSegment": {
          "required": [
            "BlobItems"
          ],
          "type": "object",
          "properties": {
            "BlobPrefixes": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlobPrefix"
              }
            },
            "BlobItems": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BlobItemInternal"
              }
            }
          },
          "xml": {
            "name": "Blobs"
          }
        },
        "ListBlobsHierarchySegmentResponse": {
          "required": [
            "ContainerName",
            "Segment",
            "ServiceEndpoint"
          ],
          "type": "object",
          "properties": {
            "ServiceEndpoint": {
              "type": "string",
              "xml": {
                "attribute": true
              }
            },
            "ContainerName": {
              "type": "string",
              "xml": {
                "attribute": true
              }
            },
            "Prefix": {
              "type": "string"
            },
            "Marker": {
              "type": "string"
            },
            "MaxResults": {
              "type": "integer"
            },
            "Delimiter": {
              "type": "string"
            },
            "Segment": {
              "$ref": "#/components/schemas/BlobHierarchyListSegment"
            },
            "NextMarker": {
              "type": "string"
            }
          },
          "description": "An enumeration of blobs",
          "xml": {
            "name": "EnumerationResults"
          }
        }
      }
    },
    "x-ms-parameterized-host": {
      "hostTemplate": "{url}",
      "useSchemePrefix": false,
      "positionInOperation": "first",
      "parameters": [
        {
          "$ref": "../components/parameters/Url.yaml"
        }
      ]
    }
  }
  